import { describe, test } from "@jest/globals";
import { BpxRgbColor } from "../color/RgbColor";
import { v_ } from "../misc/Vector2d";
import { drawingTestSetup } from "./DrawingTestSetup";
import { BpxDrawingPattern } from "./Pattern";

// Most of the DrawApi is tested in specialized tests for e.g. ellipse,
//   sprite, etc. Here we cover only some other, common bits.
describe("DrawApi", () => {
  const c0 = BpxRgbColor.fromCssHex("#010203");
  const c1 = BpxRgbColor.fromCssHex("#111213");

  test("clipping region", () => {
    const dts = drawingTestSetup(27, 15, c0);

    dts.drawApi.drawEllipseFilled(v_(1, 1), v_(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    let prev = dts.drawApi.setClippingRegion(v_(3, 2), v_(21, 11));
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled(v_(1, 1), v_(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    prev = dts.drawApi.setClippingRegion(prev[0], prev[1]);
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled(v_(1, 1), v_(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    dts.drawApi.setClippingRegion(prev[0], prev[1]);
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled(v_(1, 1), v_(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    prev = dts.drawApi.removeClippingRegion();
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled(v_(1, 1), v_(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    prev = dts.drawApi.setClippingRegion(prev[0], prev[1]);
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled(v_(1, 1), v_(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });
  });

  test("camera XY", () => {
    const dts = drawingTestSetup(27, 15, c0);

    dts.drawApi.drawEllipseFilled(v_(1, 1), v_(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    let prev = dts.drawApi.setCameraXy(v_(3, -2));
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled(v_(1, 1), v_(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - # # # # # # # # # - - - - - - - - - - - -
        - - - # # # # # # # # # # # # # # # - - - - - - - - -
        - # # # # # # # # # # # # # # # # # # # - - - - - - -
        # # # # # # # # # # # # # # # # # # # # # - - - - - -
        # # # # # # # # # # # # # # # # # # # # # # - - - - -
        # # # # # # # # # # # # # # # # # # # # # # # - - - -
        # # # # # # # # # # # # # # # # # # # # # # # - - - -
        # # # # # # # # # # # # # # # # # # # # # # # - - - -
        # # # # # # # # # # # # # # # # # # # # # # - - - - -
        # # # # # # # # # # # # # # # # # # # # # - - - - - -
        - # # # # # # # # # # # # # # # # # # # - - - - - - -
        - - - # # # # # # # # # # # # # # # - - - - - - - - -
      `,
    });

    dts.drawApi.setCameraXy(prev);
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled(v_(1, 1), v_(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });
  });

  test("pattern", () => {
    const dts = drawingTestSetup(27, 15, c0);

    dts.drawApi.drawEllipseFilled(v_(1, 1), v_(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    let prev = dts.drawApi.setDrawingPattern(
      BpxDrawingPattern.from(`
        ##--
        ##--
        --##
        --##
      `),
    );
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled(v_(1, 1), v_(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # - - # # - - # # - - - - - - - - -
        - - - - - - # # - - # # - - # # - - # # - - - - - - -
        - - - - - - # # - - # # - - # # - - # # - - # - - - -
        - - - - # # - - # # - - # # - - # # - - # # - - - - -
        - - - - # # - - # # - - # # - - # # - - # # - - # - -
        - - # # - - # # - - # # - - # # - - # # - - # # - - -
        - - # # - - # # - - # # - - # # - - # # - - # # - - -
        - # - - # # - - # # - - # # - - # # - - # # - - # # -
        - - - - # # - - # # - - # # - - # # - - # # - - # - -
        - - - # - - # # - - # # - - # # - - # # - - # # - - -
        - - - - - - # # - - # # - - # # - - # # - - # - - - -
        - - - - - - - - # # - - # # - - # # - - # - - - - - -
        - - - - - - - - - # - - # # - - # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    dts.drawApi.setDrawingPattern(prev);
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled(v_(1, 1), v_(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });
  });
});
