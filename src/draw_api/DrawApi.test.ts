import { describe, test } from "vitest";
import { $rgb, $v } from "../shorthands";
import { BpxDrawingPattern } from "./DrawingPattern";
import { drawingTestSetup } from "./DrawingTestSetup";

// Most of the DrawApi is tested in specialized tests for e.g. ellipse,
//   sprite, etc. Here we cover only some other, common bits.
describe("DrawApi", () => {
  const c0 = $rgb("#010203");
  const c1 = $rgb("#111213");

  test("clipping region", () => {
    const dts = drawingTestSetup(27, 15, c0);

    dts.drawApi.drawEllipseFilled($v(1, 1), $v(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    let [prevXy, prevWh] = dts.drawApi.setClippingRegion($v(3, 2), $v(21, 11));
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled($v(1, 1), $v(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    [prevXy, prevWh] = dts.drawApi.setClippingRegion(prevXy, prevWh);
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled($v(1, 1), $v(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    dts.drawApi.setClippingRegion(prevXy, prevWh);
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled($v(1, 1), $v(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    [prevXy, prevWh] = dts.drawApi.removeClippingRegion();
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled($v(1, 1), $v(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    dts.drawApi.setClippingRegion(prevXy, prevWh);
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled($v(1, 1), $v(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });
  });

  test("camera XY", () => {
    const dts = drawingTestSetup(27, 15, c0);

    dts.drawApi.drawEllipseFilled($v(1, 1), $v(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    let prev = dts.drawApi.setCameraXy($v(3, -2));
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled($v(1, 1), $v(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - # # # # # # # # # - - - - - - - - - - - -
        - - - # # # # # # # # # # # # # # # - - - - - - - - -
        - # # # # # # # # # # # # # # # # # # # - - - - - - -
        # # # # # # # # # # # # # # # # # # # # # - - - - - -
        # # # # # # # # # # # # # # # # # # # # # # - - - - -
        # # # # # # # # # # # # # # # # # # # # # # # - - - -
        # # # # # # # # # # # # # # # # # # # # # # # - - - -
        # # # # # # # # # # # # # # # # # # # # # # # - - - -
        # # # # # # # # # # # # # # # # # # # # # # - - - - -
        # # # # # # # # # # # # # # # # # # # # # - - - - - -
        - # # # # # # # # # # # # # # # # # # # - - - - - - -
        - - - # # # # # # # # # # # # # # # - - - - - - - - -
      `,
    });

    dts.drawApi.setCameraXy(prev);
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled($v(1, 1), $v(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });
  });

  test("pattern", () => {
    const dts = drawingTestSetup(27, 15, c0);

    dts.drawApi.drawEllipseFilled($v(1, 1), $v(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    let prev = dts.drawApi.setDrawingPattern(
      BpxDrawingPattern.from(`
        ##--
        ##--
        --##
        --##
      `),
    );
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled($v(1, 1), $v(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # - - # # - - # # - - - - - - - - -
        - - - - - - # # - - # # - - # # - - # # - - - - - - -
        - - - - - - # # - - # # - - # # - - # # - - # - - - -
        - - - - # # - - # # - - # # - - # # - - # # - - - - -
        - - - - # # - - # # - - # # - - # # - - # # - - # - -
        - - # # - - # # - - # # - - # # - - # # - - # # - - -
        - - # # - - # # - - # # - - # # - - # # - - # # - - -
        - # - - # # - - # # - - # # - - # # - - # # - - # # -
        - - - - # # - - # # - - # # - - # # - - # # - - # - -
        - - - # - - # # - - # # - - # # - - # # - - # # - - -
        - - - - - - # # - - # # - - # # - - # # - - # - - - -
        - - - - - - - - # # - - # # - - # # - - # - - - - - -
        - - - - - - - - - # - - # # - - # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });

    dts.drawApi.setDrawingPattern(prev);
    dts.drawApi.clearCanvas(c0);
    dts.drawApi.drawEllipseFilled($v(1, 1), $v(25, 13), c1);

    dts.canvas.expectToEqual({
      withMapping: { "-": c0, "#": c1 },
      expectedImageAsAscii: `
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - # # # # # # # # # # # # # # # # # # # # # # # # # -
        - - # # # # # # # # # # # # # # # # # # # # # # # - -
        - - - # # # # # # # # # # # # # # # # # # # # # - - -
        - - - - # # # # # # # # # # # # # # # # # # # - - - -
        - - - - - - # # # # # # # # # # # # # # # - - - - - -
        - - - - - - - - - # # # # # # # # # - - - - - - - - -
        - - - - - - - - - - - - - - - - - - - - - - - - - - -
      `,
    });
  });
});
